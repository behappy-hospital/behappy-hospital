use nacos_config;
INSERT INTO nacos_config.tenant_info (id, kp, tenant_id, tenant_name, tenant_desc, create_source, gmt_create, gmt_modified) VALUES (1, '1', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', 'biz', '业务NS', 'nacos', 1678155681204, 1678155681204);
INSERT INTO nacos_config.tenant_info (id, kp, tenant_id, tenant_name, tenant_desc, create_source, gmt_create, gmt_modified) VALUES (2, '1', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', 'sentinel', 'sentinel-dashboard-rules', 'nacos', 1678158529277, 1678158529277);
INSERT INTO nacos_config.config_info (id, data_id, group_id, content, md5, gmt_create, gmt_modified, src_user, src_ip, app_name, tenant_id, c_desc, c_use, effect, type, c_schema) VALUES (16, 'application-dev.yml', 'DEFAULT_GROUP', 'behappy:
  aliyun:
    access-key-id:
    access-key-secret:
  mongo:
    host: 192.168.56.100:27017
    username: root
    password: root
    db:
      order: yygh_hosp
      hosp: yygh_hosp
  rabbitmq:
    host: 192.168.56.100
    port: 5672
    virtual-host: /
    username: root
    password: root
  xxl-admin:
    addresses: http://192.168.56.100:8080/xxl-job-admin
  mysql:
    password: root
    username: root
    host: 192.168.56.100:3306
    db:
      cmn: yygh_cmn
      user: yygh_user
      hosp: yygh_hosp
      manager: yygh_manager
      order: yygh_order
      seata: seata
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
spring:
  application:
    # 此处填写网关地址，会在spring doc中使用
    gateway-host: http://localhost:8088', 'e970952c52a7b4cdb9b7fffab9a43743', '2023-03-06 20:28:44', '2023-03-26 02:47:24', 'nacos', '192.168.56.1', 'ALL', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '所有模块的共享配置', '', '', 'yaml', '');
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (17, 'redis-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    redisson:\n      config: |-\n        # 例: 单节点设置\n        singleServerConfig:\n          # （节点地址）redis://-非ssl,rediss://-ssl\n          address: redis://192.168.56.100:6379\n          database: 0\n          password: null\n          # 如果当前连接池里的连接数量超过了`最小空闲连接数`，而同时有连接空闲时间超过了该数值，那么这些连接将会自动被关闭，并从连接池里去掉。时间单位是毫秒。\n          idleConnectionTimeout: 10000\n          # 同节点建立连接时的等待超时。时间单位是毫秒。\n          connectTimeout: 10000\n          # 等待节点回复命令的时间。该时间从命令发送成功时开始计时。\n          timeout: 3000\n          # 如果尝试达到 retryAttempts（命令失败重试次数） 仍然不能将命令发送至某个指定的节点时，将抛出错误。如果尝试在此限制之内发送成功，则开始启用 timeout（命令等待超时） 计时。\n          retryAttempts: 3\n          # 在某个节点执行相同或不同命令时，连续 失败 failedAttempts（执行失败最大次数） 时，该节点将被从可用节点列表里清除，直到 reconnectionTimeout（重新连接时间间隔） 超时以后再次尝试。\n          retryInterval: 1500\n          # 在Redis节点里显示的客户端名称。\n          clientName: null\n          # 发布和订阅连接的最小空闲连接数 默认1\n          subscriptionConnectionMinimumIdleSize: 1\n          # 发布和订阅连接池大小 默认50\n          subscriptionConnectionPoolSize: 50\n          # 单个连接最大订阅数量 默认5\n          subscriptionsPerConnection: 5\n          # 最小空闲连接数 默认32，现在暂时不需要那么多的线程\n          connectionMinimumIdleSize: 4\n          # 连接池大小,在启用该功能以后，Redisson将会监测DNS的变化情况。\n          connectionPoolSize: 64\n          # 监测DNS的变化情况的时间间隔。\n          dnsMonitoringInterval: 5000\n        # 这个线程池数量被所有RTopic对象监听器，RRemoteService调用者和RExecutorService任务共同共享。\n        threads: 0\n        # 这个线程池数量是在一个Redisson实例内，被其创建的所有分布式数据类型和服务，以及底层客户端所一同共享的线程池里保存的线程数量。\n        nettyThreads: 0\n        # (如果不配置则默认为Kryo5Codec方式)，当前支持JsonJacksonCodec和Kryo5Codec序列化方式\n        codec: !<org.redisson.codec.JsonJacksonCodec> {}\n        transportMode: NIO', 'c292a24ca2a04d189dfcf3bb2281fb64', '2023-03-06 20:28:44', '2023-03-08 01:39:33', 'nacos', '192.168.56.1', 'Redis', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', 'Redis共享配置', '', '', 'yaml', '');
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (18, 'behappy-cmn-dev.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    password: ${behappy.mysql.password:root}\n    username: ${behappy.mysql.username:root}\n    url: jdbc:mysql://${behappy.mysql.host:192.168.56.100:3306}/${behappy.mysql.db.cmn:yygh_cmn}?allowMultiQueries=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\nbehappy:\n  redis:\n    cache-manager:\n      configs:\n        - key: DICT_CACHE\n          ttl: 86400', '77c9dec7fdc5f400c536b2143241a964', '2023-03-06 20:28:44', '2023-03-08 02:05:17', 'nacos', '192.168.56.1', 'behappy-cmn', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', '', '', 'yaml', '');
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (19, 'behappy-manager-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  thymeleaf:\r\n    mode: LEGACYHTML5\r\n    #编码 可不用配置\r\n    encoding: UTF-8\r\n    #开发配置为false,避免修改模板还要重启服务器\r\n    cache: false\r\n    #配置模板路径，默认是templates，可以不用配置\r\n    prefix: classpath:/templates/\r\n  datasource:\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    password: ${behappy.mysql.password:root}\r\n    username: ${behappy.mysql.username:root}\r\n    url: jdbc:mysql://${behappy.mysql.host:192.168.56.100:3306}/${behappy.mysql.db.manage:yygh_manage}?allowMultiQueries=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\r\n  jackson:\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: GMT+8', '5654ad6bc661895e3ba55b99ade1c6a7', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'behappy-manager', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (20, 'behappy-hosp-dev.yml', 'DEFAULT_GROUP', 'spring:\n  rabbitmq:\n    host: ${behappy.rabbitmq.host:192.168.56.100}\n    port: ${behappy.rabbitmq.port:5672}\n    # 指定虚拟主机\n    virtual-host: ${behappy.rabbitmq.virtual-host:/}\n    username: ${behappy.rabbitmq.username:root}\n    password: ${behappy.rabbitmq.password:root}\n    # 开启发送端确认\n    publisher-confirm-type: correlated\n    #　开启发送端消息抵达队列确认\n    publisher-returns: true\n    # 只要抵达队列，以异步优先回调我们这个 return/confirm\n    template:\n      mandatory: true\n    # 手动ack消息 消息不容易丢失\n    listener:\n      simple:\n        acknowledge-mode: manual\n  datasource:\n    password: ${behappy.mysql.password:root}\n    username: ${behappy.mysql.username:root}\n    url: jdbc:mysql://${behappy.mysql.host:192.168.56.100:3306}/${behappy.mysql.db.hosp:yygh_hosp}?allowMultiQueries=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\n  data:\n    #uri: mongodb://用户名:密码@服务器IP:端口/数据库名\n    # 上方为明确指定某个数据的用户进行连接\n    # 也可以使用admin 数据库中的用户进行连接  统一到admin 数据库进行认证\n    # admin 用户认证 url 写法： mongodb://账户:密码@ip:端口/数据库名?authSource=admin&authMechanism=SCRAM-SHA-1\n    mongodb:\n      uri: mongodb://${behappy.mongo.username:root}:${behappy.mongo.password:root}@${behappy.mongo.host:192.168.56.100:27017}/${behappy.mongo.db.hosp:yygh_hosp}?authSource=admin&authMechanism=SCRAM-SHA-1\ncanal:\n  server: 192.168.56.100\n  destination: instance\n  mode: rabbitMQ\n  vhost: canal\n  user-name: root\n  password: root\nbehappy:\n  redis:\n    cache-manager:\n      configs:\n        - key: HOSP_CACHE\n          ttl: 86400', '44ec6f1b4055ba623b8d5238214cb9e2', '2023-03-06 20:28:44', '2023-03-08 02:04:57', 'nacos', '192.168.56.1', 'behappy-hosp', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', '', '', 'yaml', '');
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (21, 'behappy-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    sentinel:\n      # 取消Sentinel控制台懒加载\n      eager: true\n      transport:\n        dashboard: 192.168.56.100:8858\n      scg:\n        fallback:\n          mode: response\n          response-status: 426\n          response-body: \'{\"code\": 426,\"message\": \"限流\"}\'\n          content-type: application/json\n      datasource:\n        gw-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: gw_flow\n            data-type: json\n            data-id: ${spring.application.name}-gw-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n        gw-api-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: gw_api_group\n            data-type: json\n            data-id: ${spring.application.name}-gw-api-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n        degrade-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: degrade\n            data-type: json\n            data-id: ${spring.application.name}-degrade-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n        system-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: system\n            data-type: json\n            data-id: ${spring.application.name}-system-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n          lower-case-service-id: true\n      routes:\n        - id: behappy-hosp\n          uri: lb://behappy-hosp\n          predicates:\n            - Path=/*/hosp/**\n        #          filters:\n        #            - RewritePath=/api/(?<segment>.*),/$\\{segment}\n        - id: behappy-cmn\n          uri: lb://behappy-cmn\n          predicates:\n            - Path=/*/cmn/**\n        - id: behappy-user\n          uri: lb://behappy-user\n          predicates:\n            - Path=/*/user/**,/*/ucenter/**\n        - id: behappy-msm\n          uri: lb://behappy-msm\n          predicates:\n            - Path=/*/msm/**\n        - id: behappy-oss\n          uri: lb://behappy-oss\n          predicates:\n            - Path=/*/oss/**\n        - id: behappy-order\n          uri: lb://behappy-order\n          predicates:\n            - Path=/*/order/**\n        - id: behappy-manager\n          uri: lb://behappy-manager\n          predicates:\n            - Path=/*\n        # 固定路由转发配置\n        - id: openapi\n          uri: lb://behappy-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n', '6fbb8e1a018af268ea987b5c3e3b199c', '2023-03-06 20:28:44', '2023-03-08 01:38:50', 'nacos', '192.168.56.1', 'behappy-gateway', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', '', '', 'yaml', '');
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (22, 'behappy-executor-task-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  rabbitmq:\r\n    host: ${behappy.rabbitmq.host:192.168.56.100}\r\n    port: ${behappy.rabbitmq.port:5672}\r\n    # 指定虚拟主机\r\n    virtual-host: ${behappy.rabbitmq.virtual-host:/}\r\n    username: ${behappy.rabbitmq.username:root}\r\n    password: ${behappy.rabbitmq.password:root}\r\n    # 开启发送端确认\r\n    publisher-confirm-type: correlated\r\n    #　开启发送端消息抵达队列确认\r\n    publisher-returns: true\r\n    # 只要抵达队列，以异步优先回调我们这个 return/confirm\r\n    template:\r\n      mandatory: true\r\n    # 手动ack消息 消息不容易丢失\r\n    listener:\r\n      simple:\r\n        acknowledge-mode: manual\r\nlogging:\r\n  config: classpath:logback-spring.xml\r\nxxl:\r\n  job:\r\n    #调度中心通讯TOKEN [选填]：非空时启用\r\n    accessToken: default_token\r\n    admin:\r\n      addresses: ${behappy.xxl-admin.addresses:http://192.168.56.100:8080/xxl-job-admin}\r\n    executor:\r\n      #执行器IP，默认为空表示自动获取IP\r\n      ip: \r\n      address: \r\n      #xxljob配置的端口号，默认为9999\r\n      port: 9999\r\n      #xxljob配置的执行器名称，\r\n      appname: behappy-executor-task\r\n      #执行器运行日志文件存储磁盘路径\r\n      logpath: /data/applogs/xxl-job/jobhandler\r\n      #调度中心日志表数据保存天数，过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能\r\n      logretentiondays: 7\r\n', 'f4f611abdf6efb64ce1367b7d8808673', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'behappy-executor-task', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (23, 'behappy-monitor-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  security:\r\n    user:\r\n      name: root\r\n      password: root\r\n  boot:\r\n    admin:\r\n      context-path: \'/\'\r\n', '935b298cf238e8357199bd0515cf747c', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'behappy-monitor', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (24, 'behappy-msm-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  rabbitmq:\r\n    host: ${behappy.rabbitmq.host:192.168.56.100}\r\n    port: ${behappy.rabbitmq.port:5672}\r\n    # 指定虚拟主机\r\n    virtual-host: ${behappy.rabbitmq.virtual-host:/}\r\n    username: ${behappy.rabbitmq.username:root}\r\n    password: ${behappy.rabbitmq.password:root}\r\n    # 开启发送端确认\r\n    publisher-confirm-type: correlated\r\n    #　开启发送端消息抵达队列确认\r\n    publisher-returns: true\r\n    # 只要抵达队列，以异步优先回调我们这个 return/confirm\r\n    template:\r\n      mandatory: true\r\n    # 手动ack消息 消息不容易丢失\r\n    listener:\r\n      simple:\r\n        acknowledge-mode: manual\r\naliyun:\r\n  sms:\r\n    access-key-id: ${behappy.aliyun.access-key-id:}\r\n    access-key-secret: ${behappy.aliyun.access-key-secret:}\r\n    sign-name: ABC商城\r\n    template-code: SMS_206546316', '29ccb5f5fc9875d9786c790568ac3565', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'behappy-msm', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (25, 'behappy-order-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  rabbitmq:\r\n    host: ${behappy.rabbitmq.host:192.168.56.100}\r\n    port: ${behappy.rabbitmq.port:5672}\r\n    # 指定虚拟主机\r\n    virtual-host: ${behappy.rabbitmq.virtual-host:/}\r\n    username: ${behappy.rabbitmq.username:root}\r\n    password: ${behappy.rabbitmq.password:root}\r\n    # 开启发送端确认\r\n    publisher-confirm-type: correlated\r\n    #　开启发送端消息抵达队列确认\r\n    publisher-returns: true\r\n    # 只要抵达队列，以异步优先回调我们这个 return/confirm\r\n    template:\r\n      mandatory: true\r\n    # 手动ack消息 消息不容易丢失\r\n    listener:\r\n      simple:\r\n        acknowledge-mode: manual\r\n  datasource:\r\n    password: ${behappy.mysql.password:root}\r\n    username: ${behappy.mysql.username:root}\r\n    url: jdbc:mysql://${behappy.mysql.host:192.168.56.100:3306}/${behappy.mysql.db.order:yygh_order}?allowMultiQueries=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\r\n  data:\r\n    #uri: mongodb://用户名:密码@服务器IP:端口/数据库名\r\n    # 上方为明确指定某个数据的用户进行连接\r\n    # 也可以使用admin 数据库中的用户进行连接  统一到admin 数据库进行认证\r\n    # admin 用户认证 url 写法： mongodb://账户:密码@ip:端口/数据库名?authSource=admin&authMechanism=SCRAM-SHA-1\r\n    mongodb:\r\n      uri: mongodb://${behappy.mongo.username:root}:${behappy.mongo.password:root}@${behappy.mongo.host:192.168.56.100:27017}/${behappy.mongo.db.order:yygh_hosp}?authSource=admin&authMechanism=SCRAM-SHA-1\r\nwx:\r\n  pay:\r\n    app-id: wx74862e0dfcf69954\r\n    partner: 1558950191\r\n    partner-key: T6m9iK73b0kn9g5v426MKfHQH7X8rKwb\r\n    cert: cert/apiclient_cert.p12\r\naliyun:\r\n  sms:\r\n    template-code: SMS_206546316', '103007005347f9668d5e74810df77a4c', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'behappy-order', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (26, 'behappy-oss-dev.yml', 'DEFAULT_GROUP', 'aliyun:\r\n  oss:\r\n    access-key-id: ${behappy.aliyun.access-key-id:}\r\n    access-key-secret: ${behappy.aliyun.access-key-secret:}\r\n    bucket: behappy-xiaowu\r\n    endpoint: oss-cn-beijing.aliyuncs.com\r\n', 'a3c906d0f0a0d05d4d7a5682c7eda2c9', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'behappy-oss', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (27, 'behappy-user-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    password: ${behappy.mysql.password:root}\r\n    username: ${behappy.mysql.username:root}\r\n    url: jdbc:mysql://${behappy.mysql.host:192.168.56.100:3306}/${behappy.mysql.db.user:yygh_user}?allowMultiQueries=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\r\nwx:\r\n  open:\r\n    app-id: wxed9954c01bb89b47\r\n    app-secret: a7482517235173ddb4083788de60b90e\r\n    redirect-url: http://localhost:8160/api/ucenter/wx/callback\r\n    yygh-base-url: http://localhost:3000\r\n', '15234a0048c481f4708f897152a944de', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'behappy-user', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (28, 'sentinel-dev.yml', 'DEFAULT_GROUP', 'feign:\n  sentinel:\n    enabled: true\nspring: \n  cloud:\n    openfeign:\n      okhttp:\n        enabled: false\n      httpclient:\n        enabled: true\n        max-connections: 200 # 最大的连接数\n        max-connections-per-route: 50 # 每个路径的最大连接数\n      client:\n        config:\n          default: # default全局的配置\n            loggerLevel: basic # 日志级别，BASIC就是基本的请求和响应信息\n            connectTimeout: 10000\n            readTimeout: 10000\n      compression:\n        request:\n          enabled: true\n        response:\n          enabled: true\n      # https://github.com/alibaba/spring-cloud-alibaba/issues/3024\n      lazy-attributes-resolution: true\n    sentinel:\n      # 取消Sentinel控制台懒加载\n      eager: true\n      transport:\n        dashboard: 192.168.56.100:8858\n      datasource:\n        flow-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: flow\n            data-type: json\n            data-id: ${spring.application.name}-flow-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n        degrade-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: degrade\n            data-type: json\n            data-id: ${spring.application.name}-degrade-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n        system-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: system\n            data-type: json\n            data-id: ${spring.application.name}-system-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n        param-flow-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: param_flow\n            data-type: json\n            data-id: ${spring.application.name}-param-flow-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147\n        authority-ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr:192.168.56.100:8848}\n            username: ${spring.cloud.nacos.username:nacos}\n            password: ${spring.cloud.nacos.password:nacos}\n            rule-type: authority\n            data-type: json\n            data-id: ${spring.application.name}-authority-rules\n            namespace: 4e8525e0-335b-46c1-b61e-1a46c5f0a147', '0ccf7082a2ac146299acd0ee53725f93', '2023-03-06 20:28:44', '2023-03-08 01:40:12', 'nacos', '192.168.56.1', 'SENTINEL', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', 'sentinel共享配置', '', '', 'yaml', '');
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (29, 'datasource-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    # druid-dev.yml\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    druid:\r\n      aop-patterns: org.xiaowu.behappy.*  #监控SpringBean\r\n      filters: stat,wall     # 底层开启功能，stat（sql监控），wall（防火墙）\r\n      stat-view-servlet:   # 配置监控页功能\r\n        enabled: true\r\n        login-username: admin\r\n        login-password: admin\r\n        resetEnable: false\r\n      web-stat-filter:  # 监控web\r\n        enabled: true\r\n        urlPattern: /*\r\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\r\n      filter:\r\n        stat:    # 对上面filters里面的stat的详细配置\r\n          slow-sql-millis: 1000\r\n          logSlowSql: true\r\n          enabled: true\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            drop-table-allow: false\r\n# mybaits-dev.yml配置\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*.xml\r\n  global-config:\r\n    banner: false\r\n    db-config:\r\n      table-underline: true\r\n      logic-delete-value: 1\r\n      logic-not-delete-value: 0\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    #开启sql日志\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl', '27c6ff65ddc4aef555f80a5c26c37d9f', '2023-03-06 20:28:44', '2023-03-06 20:28:44', NULL, '192.168.56.1', 'DATASOURCE', '1c3bfebf-a571-44d6-9b75-70fd124cbcf7', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (30, 'behappy-cmn-flow-rules', 'DEFAULT_GROUP', '[]', 'd751713988987e9331980363e24189ce', '2023-03-06 21:09:00', '2023-03-06 21:09:00', NULL, '192.168.56.1', '', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (31, 'behappy-gateway-gw-api-rules', 'DEFAULT_GROUP', '[]', 'd751713988987e9331980363e24189ce', '2023-03-06 21:09:00', '2023-03-06 21:09:00', NULL, '192.168.56.1', '', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (32, 'behappy-gateway-degrade-rules', 'DEFAULT_GROUP', '[]', 'd751713988987e9331980363e24189ce', '2023-03-06 21:09:00', '2023-03-06 21:09:00', NULL, '192.168.56.1', '', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (33, 'behappy-gateway-gw-rules', 'DEFAULT_GROUP', '[{\"id\":1,\"app\":\"behappy-gateway\",\"ip\":\"192.168.56.1\",\"port\":8720,\"gmtCreate\":1677056847994,\"gmtModified\":1677056847994,\"resource\":\"ReactiveCompositeDiscoveryClient_behappy-hosp\",\"resourceMode\":0,\"grade\":1,\"count\":1.0,\"interval\":1,\"intervalUnit\":0,\"controlBehavior\":0,\"burst\":0,\"maxQueueingTimeoutMs\":null,\"paramItem\":null}]', 'c342cbddd61a8dfa301339168cb35ba8', '2023-03-06 21:09:00', '2023-03-06 21:09:00', NULL, '192.168.56.1', '', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (34, 'behappy-hosp-flow-rules', 'DEFAULT_GROUP', '[]', 'd751713988987e9331980363e24189ce', '2023-03-06 21:09:00', '2023-03-06 21:09:00', NULL, '192.168.56.1', '', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (35, 'behappy-gateway-system-rules', 'DEFAULT_GROUP', '[{\"id\":1,\"app\":\"behappy-gateway\",\"ip\":\"192.168.56.1\",\"port\":8720,\"highestSystemLoad\":-1.0,\"avgRt\":-1,\"maxThread\":-1,\"qps\":1.0,\"highestCpuUsage\":-1.0,\"gmtCreate\":1677056177359,\"gmtModified\":1677056177359}]', '8f94dc85c6ba814a7f3d5cc1a5ffdfd1', '2023-03-06 21:09:00', '2023-03-06 21:09:00', NULL, '192.168.56.1', '', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `nacos_config`.`config_info`(`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`) VALUES (36, 'behappy-order-flow-rules', 'DEFAULT_GROUP', '[{\"id\":1,\"app\":\"behappy-order\",\"ip\":\"192.168.56.1\",\"port\":8722,\"limitApp\":\"default\",\"resource\":\"/api/order/orderInfo/auth/submitOrder/{scheduleId}/{patientId}\",\"grade\":1,\"count\":1.0,\"strategy\":1,\"refResource\":\"/api/order/weixin/createNative/{orderId}\",\"controlBehavior\":0,\"warmUpPeriodSec\":null,\"maxQueueingTimeMs\":null,\"clusterMode\":false,\"clusterConfig\":{\"flowId\":null,\"thresholdType\":0,\"fallbackToLocalWhenFail\":true,\"strategy\":0,\"sampleCount\":10,\"windowIntervalMs\":1000,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000},\"gmtCreate\":1677057708969,\"gmtModified\":1677057708969}]', 'cfa62dd20b22ddcb4d4679fc95a752fe', '2023-03-06 21:09:00', '2023-03-06 21:09:00', NULL, '192.168.56.1', '', '4e8525e0-335b-46c1-b61e-1a46c5f0a147', NULL, NULL, NULL, 'text', NULL);

INSERT INTO nacos_config.tenant_info (id, kp, tenant_id, tenant_name, tenant_desc, create_source, gmt_create, gmt_modified) VALUES (3, '1', '2f060af4-6ceb-460a-acb8-0acf6715d20e', 'seata', 'seata', 'nacos', 1679802515216, 1679802515216);
INSERT INTO nacos_config.config_info VALUES (82, 'client.properties', 'DEFAULT_GROUP', '# 事务组映射关系\nservice.vgroupMapping.seata-demo=SH\n\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\n# 与TC服务的通信配置\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableClientBatchSendRequest=false\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\n# RM配置\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=false\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\n# TM配置\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\n\n# undo日志配置\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\nclient.log.exceptionRate=100', '9a668bea5f08d50e0bd6b6b5fbc3ea16', '2023-07-18 03:12:30', '2023-07-18 03:18:54', 'nacos', '192.168.56.1', 'SEATA', '2f060af4-6ceb-460a-acb8-0acf6715d20e', '', '', '', 'properties', '');
INSERT INTO nacos_config.config_info (id, data_id, group_id, content, md5, gmt_create, gmt_modified, src_user, src_ip, app_name, tenant_id, c_desc, c_use, effect, type, c_schema) VALUES (37, 'seataServer.properties', 'DEFAULT_GROUP', 'store.mode=db
#-----db-----
store.db.datasource=druid
store.db.dbType=mysql
# 需要根据mysql的版本调整driverClassName
# mysql8及以上版本对应的driver：com.mysql.cj.jdbc.Driver
# mysql8以下版本的driver：com.mysql.jdbc.Driver
store.db.driverClassName=com.mysql.cj.jdbc.Driver
store.db.url=jdbc:mysql://192.168.56.100:3306/seata?useUnicode=true&characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false
store.db.user=root
store.db.password=root
# 数据库初始连接数
store.db.minConn=1
# 数据库最大连接数
store.db.maxConn=20
# 获取连接时最大等待时间 默认5000，单位毫秒
store.db.maxWait=5000
# 全局事务表名 默认global_table
store.db.globalTable=global_table
# 分支事务表名 默认branch_table
store.db.branchTable=branch_table
# 全局锁表名 默认lock_table
store.db.lockTable=lock_table
# 查询全局事务一次的最大条数 默认100
store.db.queryLimit=100

# undo保留天数 默认7天,log_status=1（附录3）和未正常清理的undo
server.undo.logSaveDays=7
# undo清理线程间隔时间 默认86400000，单位毫秒
server.undo.logDeletePeriod=86400000
# 二阶段提交重试超时时长 单位ms,s,m,h,d,对应毫秒,秒,分,小时,天,默认毫秒。默认值-1表示无限重试
# 公式: timeout>=now-globalTransactionBeginTime,true表示超时则不再重试
# 注: 达到超时时间后将不会做任何重试,有数据不一致风险,除非业务自行可校准数据,否者慎用
server.maxCommitRetryTimeout=-1
# 二阶段回滚重试超时时长
server.maxRollbackRetryTimeout=-1
# 二阶段提交未完成状态全局事务重试提交线程间隔时间 默认1000，单位毫秒
server.recovery.committingRetryPeriod=1000
# 二阶段异步提交状态重试提交线程间隔时间 默认1000，单位毫秒
server.recovery.asynCommittingRetryPeriod=1000
# 二阶段回滚状态重试回滚线程间隔时间  默认1000，单位毫秒
server.recovery.rollbackingRetryPeriod=1000
# 超时状态检测重试线程间隔时间 默认1000，单位毫秒，检测出超时将全局事务置入回滚会话管理器
server.recovery.timeoutRetryPeriod=1000

# 客户端与服务端传输方式
transport.serialization=seata
transport.compressor=none
# 关闭metrics功能，提高性能
metrics.enabled=false
metrics.registryType=compact
metrics.exporterList=prometheus
metrics.exporterPrometheusPort=9898', '6eb9db2772193d4325f32e1b17b196cb', '2023-03-25 22:54:49', '2023-03-25 23:18:11', 'nacos', '192.168.56.1', 'SEATA', '2f060af4-6ceb-460a-acb8-0acf6715d20e', '', '', '', 'properties', '');
